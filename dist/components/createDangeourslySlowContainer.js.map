{"version":3,"sources":["components/createDangeourslySlowContainer.js"],"names":[],"mappings":";;;;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;AAoBe,SAAS,8BAAT,OAMV;AAAA,kCALH,eAKG;;AAAA,MALH,gBAKG,wCALe;AAAA,WAAO,EAAP;AAAA,GAKf;;AAAA,kCAJH,eAIG;;AAAA,MAJH,gBAIG,wCAJe;AAAA,WAAO,EAAP;AAAA,GAIf;;AAAA,mCAHH,kBAGG;AAAA,MAHH,kBAGG,yCAHkB;AAAA,WAAO,EAAP;AAAA,GAGlB;AAAA,4BAFH,SAEG;AAAA,MAFH,SAEG,kCAFS,EAET;AAAA,mCADH,2BACG;;AAAA,MADH,2BACG,yCAD2B,IAC3B;;AAEH,SAAO;AAAA,WAAgC,gBAAM,WAAN,CAAkB;;AAEvD,iBAAW,SAF4C;;AAIvD,qBAJuD,6BAIrC;AAChB,eAAO,iBAAgB,IAAhB,CAAqB,IAArB,CAAP;AACD,OANsD;AAQvD,qBARuD,6BAQrC;AAChB,eAAO,kBAAP;AACD,OAVsD;AAYvD,wBAZuD,gCAYlC;;AAEnB,YAAM,kBAAkB,mBAAmB,IAAnB,CAAwB,IAAxB,CAAxB;;AAEA,mDAAoB,IAApB,EAA0B,eAA1B;AACA,gDAAiB,IAAjB,EAAuB,eAAvB;AACD,OAlBsD;AAoBvD,+BApBuD,uCAoB3B;;AAE1B,YAAI,2BAAJ,EAAiC;;AAE/B,cAAM,kBAAkB,mBAAmB,IAAnB,CAAwB,IAAxB,CAAxB;;AAEA,mDAAkB,IAAlB;AACA,kDAAiB,IAAjB,EAAuB,eAAvB;AACD;AACF,OA7BsD;AA+BvD,0BA/BuD,kCA+BhC;;AAErB,iDAAkB,IAAlB;AACD,OAlCsD;AAoCvD,YApCuD,oBAoC9C;AACP,eAAO,8BAAC,4BAAD,eAAkC,KAAK,KAAvC,EAAkD,KAAK,KAAvD,EAAP;AACD;AAtCsD,KAAlB,CAAhC;AAAA,GAAP;AAwCD","file":"createDangeourslySlowContainer.js","sourcesContent":["import React from 'react'\n\nimport {removeObservables, setupNonObservables, setupObservables} from '../internal/ContainerHelpers'\n\n\n/**\n * Supports parent React props at the expense of potentially being inefficient:\n *\n * > Every #componentWillReceiveProps forces observer re-initialization.\n * > Therefore it is your responsibility to ensure that it doesn't get called too often.\n *\n * Since container props and state both get mapped as child props,\n * state overriddes props with the same name.\n *\n * Do NOT use anonymous functions to define getInitialState, getObservableState, getDefaultProps!\n *\n * @param {Function} getDefaultProps - container default props. Passed to child as props.\n * @param {Function} getInitialState - container initial state. Passed to child as props.\n * @param {Function} getObservableState - pass observables here. Observable *values* passed to child as props\n * @param {*} propTypes - container propTypes.\n * @returns {Function} that returns the container\n */\nexport default function createDangerouslySlowContainer({\n  getDefaultProps = () => ({}),\n  getInitialState = () => ({}),\n  getObservableState = () => ({}),\n  propTypes = {},\n  __dangerouslyEnableSlowness = true\n  }) {\n\n  return StatelessFunctionalComponent => React.createClass({\n\n    propTypes: propTypes,\n\n    getInitialState() {\n      return getInitialState.call(this)\n    },\n\n    getDefaultProps() {\n      return getDefaultProps()\n    },\n\n    componentWillMount() {\n\n      const observableState = getObservableState.call(this)\n\n      setupNonObservables(this, observableState)\n      setupObservables(this, observableState)\n    },\n\n    componentWillReceiveProps() {\n\n      if (__dangerouslyEnableSlowness) {\n\n        const observableState = getObservableState.call(this)\n\n        removeObservables(this)\n        setupObservables(this, observableState)\n      }\n    },\n\n    componentWillUnmount() {\n\n      removeObservables(this)\n    },\n\n    render() {\n      return <StatelessFunctionalComponent {...this.props} {...this.state} />\n    }\n  })\n}\n"]}