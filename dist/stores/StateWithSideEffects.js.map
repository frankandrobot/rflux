{"version":3,"sources":["stores/StateWithSideEffects.js"],"names":[],"mappings":";;;;;;;;;;QAuCgB,K,GAAA,K;;;;;;;;IApCK,oB;AAEnB,gCAAY,KAAZ,EAAmB,WAAnB,EAAgC;AAAA;;AAE9B,SAAK,KAAL,GAAa,SAAS,EAAtB;AACA,SAAK,WAAL,GAAmB,eAAe,EAAlC;AACD;;;;4BAEO,C,EAAG;;AAET,aAAO,aAAa,oBAAb,GAEL,IAAI,oBAAJ,cACM,KAAK,KADX,EACqB,EAAE,KADvB,GAEE,KAAK,WAAL,CAAiB,MAAjB,CAAwB,EAAE,WAA1B,CAFF,CAFK,GAOL,IAAI,oBAAJ,EAA0B,aAAI,KAAK,KAAT,EAAmB,CAAnB,GAAuB,KAAK,WAAtD,EAPF;AAQD;;;qCAE8B;AAAA,wCAAb,WAAa;AAAb,mBAAa;AAAA;;AAE7B,aAAO,IAAI,oBAAJ,cACD,KAAK,KADJ,GAEL,KAAK,WAAL,CAAiB,MAAjB,CAAwB,WAAxB,CAFK,CAAP;AAID;;;;;;;;;;;;;;;kBA1BkB,oB;AAoCd,SAAS,KAAT,CAAe,KAAf,EAAsB;;AAE3B,SAAO,IAAI,oBAAJ,CAAyB,KAAzB,CAAP;AACD","file":"StateWithSideEffects.js","sourcesContent":["/**\n * Hey, look! Something like a monad\n */\nexport default class StateWithSideEffects {\n\n  constructor(state, sideEffects) {\n\n    this.state = state || {}\n    this.sideEffects = sideEffects || []\n  }\n\n  combine(b) {\n\n    return b instanceof StateWithSideEffects ?\n\n      new StateWithSideEffects(\n        {...this.state, ...b.state},\n        this.sideEffects.concat(b.sideEffects)\n      ) :\n\n      new StateWithSideEffects(({...this.state, ...b}, this.sideEffects))\n  }\n\n  addSideEffects(...sideEffects) {\n\n    return new StateWithSideEffects(\n      {...this.state},\n      this.sideEffects.concat(sideEffects)\n    )\n  }\n}\n\n/**\n * Constructor helper\n *\n * @param {*} state\n * @param {[]} sideEffects - array of side effects\n * @returns {StateWithSideEffects} instance\n */\nexport function state(state) {\n\n  return new StateWithSideEffects(state)\n}\n"]}