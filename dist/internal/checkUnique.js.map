{"version":3,"sources":["internal/checkUnique.js"],"names":["checkUnique","arrayOfObjs","prop","msg","hist","i","item","Error"],"mappings":";;;;;kBAMwBA,W;AANxB;;;;;;AAMe,SAASA,WAAT,GAAkD;AAAA,MAA7BC,WAA6B,uEAAf,EAAe;AAAA,MAAXC,IAAW;AAAA,MAALC,GAAK;;AAC/D,MAAMC,OAAO,EAAb;;AAEA,OAAI,IAAIC,CAAR,IAAaJ,WAAb,EAA0B;AACxB,QAAMK,OAAOL,YAAYI,CAAZ,CAAb;;AAEAD,SAAKE,KAAKJ,IAAL,CAAL,IAAmB,CAACE,KAAKE,KAAKJ,IAAL,CAAL,KAAoB,CAArB,IAA0B,CAA7C;AACA,QAAIE,KAAKE,KAAKJ,IAAL,CAAL,KAAoB,CAAxB,EAA2B;AACzB,YAAM,IAAIK,KAAJ,CAAaJ,GAAb,UAAqBG,KAAKJ,IAAL,CAArB,CAAN;AACD;AACF;AACF","file":"checkUnique.js","sourcesContent":["/**\n * Checks that the given prop occurs only once in the array of objects\n * @param {[]} arrayOfObjs\n * @param {String} prop\n * @param {String} msg\n */\nexport default function checkUnique(arrayOfObjs = [], prop, msg) {\n  const hist = {}\n\n  for(let i in arrayOfObjs) {\n    const item = arrayOfObjs[i]\n\n    hist[item[prop]] = (hist[item[prop]] || 0) + 1\n    if (hist[item[prop]] >= 2) {\n      throw new Error(`${msg}: ${item[prop]}`)\n    }\n  }\n}\n"]}