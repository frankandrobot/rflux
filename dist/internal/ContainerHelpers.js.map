{"version":3,"sources":["internal/ContainerHelpers.js"],"names":["observables","nonObservables","setupNonObservables","setupObservables","removeObservables","stateOrProps","Object","keys","filter","prop","map","name","observable","reduce","total","assign","component","setState","_nonObservables","_callback","val","_subscribe","observableList","callbacks","forEach","obj","i","onValue","_pluck","culledObj","key","_setupObservableState","initialState","x","state","_observables","_callbacks","offValue"],"mappings":"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","file":"ContainerHelpers.js","sourcesContent":["import isObservable from '../internal/isObservable'\n\n\n/**\n * Extracts the properties that are observables\n * @param {state} stateOrProps\n * @returns {Array} of observables\n * @private\n */\nexport function observables(stateOrProps) {\n\n  return Object.keys(stateOrProps)\n      .filter(prop => isObservable(stateOrProps[prop]))\n      .map(prop => ({name: prop, observable: stateOrProps[prop]})) || []\n}\n\n/**\n * Extracts the properties that are not observables\n * @param {state} stateOrProps\n * @returns {Map<string,*>} map of non-observables\n * @private\n */\nexport function nonObservables(stateOrProps) {\n\n  return Object.keys(stateOrProps)\n    .filter(prop => !isObservable(stateOrProps[prop]) && prop !== 'children')\n    .reduce((total, prop) => Object.assign(total, {[prop]: stateOrProps[prop]}), {})\n}\n\nexport function setupNonObservables(component, stateOrProps, setState = true) {\n\n  component._nonObservables = nonObservables(stateOrProps)\n\n  setState && component.setState(component._nonObservables)\n}\n\n/**\n * a callback maps a \"val\" to the obj property on the Component state\n *\n * @param {React.Component} component\n * @param {*} prop\n * @returns {Function} callback\n * @private\n */\nconst _callback = (component, prop) => val => component.setState({[prop.name]: val})\nconst _subscribe = (observableList, callbacks) =>\n  observableList.forEach((obj, i) => obj.observable.onValue(callbacks[i]))\nconst _pluck = (obj, keys) =>\n  keys.reduce((culledObj, key) => Object.assign(culledObj, {[key]: obj[key]}), {})\n\n\nfunction _setupObservableState(component, observableList, initialState) {\n\n  const callbacks = observableList.map(prop => _callback(component, prop))\n\n  //set default state first before setting up listeners\n  component.setState(\n    _pluck(initialState, observableList.map(x => x.name)), // set observables only\n    () => _subscribe(observableList, callbacks)\n  )\n\n  return callbacks\n}\n\nexport function setupObservables(component, stateOrProps, initialState) {\n\n  initialState = initialState || component.state || {}\n\n  component._observables = observables(stateOrProps)\n  component._callbacks = _setupObservableState(component, component._observables, initialState)\n}\n\nexport function removeObservables(component) {\n\n  const observables = component._observables\n  const callbacks = component._callbacks\n\n  observables.forEach((obj, i) => obj.observable.offValue(callbacks[i]))\n}\n"]}