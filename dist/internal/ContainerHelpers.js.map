{"version":3,"sources":["internal/ContainerHelpers.js"],"names":[],"mappings":"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","file":"ContainerHelpers.js","sourcesContent":["import isObservable from '../internal/isObservable'\n\n\nexport function observables(stateOrProps) {\n\n  return Object.keys(stateOrProps)\n      .filter(prop => isObservable(stateOrProps[prop]))\n      .map(prop => ({name: prop, observable: stateOrProps[prop]})) || []\n}\n\nexport function nonObservables(stateOrProps) {\n\n  return Object.keys(stateOrProps)\n    .filter(prop => !isObservable(stateOrProps[prop]) && prop !== 'children')\n    .reduce((total, prop) => Object.assign(total, {[prop]: stateOrProps[prop]}), {})\n}\n\nexport function setupNonObservables(component, stateOrProps, setState = true) {\n\n  component._nonObservables = nonObservables(stateOrProps)\n\n  setState && component.setState(component._nonObservables)\n}\n\n/**\n * a callback maps a \"val\" to the obj property on the Component state\n *\n * @param {React.Component} component\n * @param {*} prop\n * @returns {Function} callback\n * @private\n */\nconst _callback = (component, prop) => val => component.setState({[prop.name]: val})\nconst _subscribe = (observableList, callbacks) =>\n  observableList.forEach((obj, i) => obj.observable.onValue(callbacks[i]))\nconst _pluck = (obj, keys) =>\n  keys.reduce((culledObj, key) => Object.assign(culledObj, {[key]: obj[key]}), {})\n\n\nfunction _setupObservableState(component, observableList, initialState) {\n\n  initialState = initialState || component.state || {}\n\n  const callbacks = observableList.map(prop => _callback(component, prop))\n\n  //set default state first before setting up listeners\n  component.setState(\n    _pluck(initialState, observableList.map(x => x.name)), // set observables only\n    () => _subscribe(observableList, callbacks)\n  )\n\n  return callbacks\n}\n\nexport function setupObservables(component, stateOrProps) {\n\n  component._observables = observables(stateOrProps)\n  component._callbacks = _setupObservableState(component, component._observables)\n}\n\nexport function removeObservables(component) {\n\n  const observables = component._observables\n  const callbacks = component._callbacks\n\n  observables.forEach((obj, i) => obj.observable.offValue(callbacks[i]))\n}\n"]}